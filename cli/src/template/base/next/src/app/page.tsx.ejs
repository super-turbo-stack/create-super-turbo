'use client'
import Link from 'next/link';
import Image from "next/image";

<% if( props.next.nextDependencies.recoil) { %>
import {useRecoilState} from 'recoil';
import {countState} from '@repo/store';
import React, { useEffect } from "react";
<% } else { %> 
    import React, { useState, useEffect } from 'react'
<% } %> 

<% if(props.next.nextDependencies.tanstackQuery) { %> 
import {useQuery} from "@tanstack/react-query";
<% } %> 

<% if(props.next.nextDependencies.shadcnTailwind) { %>
import { Button } from "@repo/ui";
<% } %>

const page = () => {
    return (
<% if(props.next.nextDependencies.tailwind || props.next.nextDependencies.shadcnTailwind) { %>
        <div className='bg-background w-screen h-svh pb-8'>
            <div className='max-w-screen-lg w-full mx-auto h-full font-roboto grid grid-cols-2 pt-[10%]'>
                <div>
                    <h1 className='text-5xl font-bold text-primary capitalize tracking-[-.0325em] leading-[1.1]'>
                        create <span className='uppercase'>super</span> stack
                    </h1>
                    <p className='text-lg text-foreground/70 leading-[28px] tracking-[-0.37px] font-medium my-2'>
                        Kickstart your Next.js project in a flash with Create Super Turbo!
                    </p>
                    <ol className='font-mono list-decimal pl-8'>
                        <li>Get started by editing src/app/page.tsx.</li>
                        <li>Save and see your changes instantly.</li>
                    </ol>
                    <div className='flex gap-4 my-4'>
                        <% if(props.next.nextDependencies.shadcnTailwind) { %>
                                <Button asChild>
                                <Link href="#">
                                Start Building
                                </Link>
                                </Button>
                                <Button asChild variant={"link"} className='gap-1'>
                                <Link href="https://nextjs.org/" target="_blank">
                                <Image width={16} height={16} src={'/globe.svg'} alt='Globe' className='h-4 dark:invert opacity-50 mr-1' />
                                Go to nextjs.org
                                <Image width={16} height={16} src={'/arrow.svg'} alt='Arrow right' className='h-4 dark:invert' />
                                </Link>
                                </Button>
                        <% } else { %> 
                                <Button className="text-primary-foreground">
                                <Link href="#">
                                Start Building
                                </Link>
                                </Button>
                                <Button className='bg-transparent text-primary hover:underline underline-offset-4 gap-1'>
                                <Link href="https://nextjs.org/" className="flex gap-1 items-center" target="_blank">
                                <Image width={16} height={16} src={'/globe.svg'} alt='Globe' className='h-4 dark:invert opacity-50 mr-1' />
                                Go to nextjs.org
                                <Image width={16} height={16} src={'/arrow.svg'} alt='Arrow right' className='h-4 dark:invert' />
                                </Link>
                                </Button>
                        <% } %> 
                    </div>
                </div>
                <% if(props.next.nextDependencies.tanstackQuery) { %>
                <GithubStar />
                <% } else { %> 
                        <% if(props.next.nextDependencies.shadcnTailwind) { %>
                                <Button asChild variant={"outline"} className="gap-1 justify-self-end">
                                <Link href="https://github.com/super-turbo-stack/create-super-stack" target="_blank">
                                <Image width={16} height={16} src={'/github.svg'} alt="Github" className="h-4 dark:invert"/>
                                <strong>Github</strong>
                                </Link>
                                </Button>
                        <% } else { %> 
                                <Button className="bg-transparent text-primary border border-[#27272a] gap-1 justify-self-end">
                                <Link href="https://github.com/super-turbo-stack/create-super-stack" className="flex gap-1 items-center" target="_blank">
                                <Image width={16} height={16} src={'/github.svg'} alt="Github" className="h-4 dark:invert"/>
                                <strong>Github</strong>
                                </Link>
                                </Button>
                        <% } %> 
                <% } %> 
                <RandomNumberGenerator />
            </div>
        </div>
    <% } else { %> 
        <div className='wrapper'>
            <div className='container'>
                <div>
                    <h1 className='heading'>
                        create <span className='uppercase'>super</span> stack
                    </h1>
                    <p className='information'>
                        Kickstart your Next.js project in a flash with Create Super Turbo!
                    </p>
                    <ol className='getstartedlist'>
                        <li>Get started by editing src/app/page.tsx.</li>
                        <li>Save and see your changes instantly.</li>
                    </ol>
                    <div className='buttongroup'>
                        <button>
                            <Link href="#">
                                Start Building
                            </Link>
                        </button>
                        <button className='docsbtn'>
                            <Link href="https://nextjs.org/" target="_blank">
                            <Image width={16} height={16} src={'/globe.svg'} alt='Globe' className='globe' />
                            Go to nextjs.org
                            <Image width={16} height={16} src={'/arrow.svg'} alt='Arrow right' className='arrow' />
                            </Link>
                        </button>
                    </div>
                </div>
                <% if(props.next.nextDependencies.tanstackQuery) { %>
                <GithubStar />
                <% } else { %> 
                <button className="githubstar">
                <Link href="https://github.com/super-turbo-stack/create-super-stack" target="_blank">
                  <Image width={16} height={16} src={'/github.svg'} alt="Github" className="h-4 dark:invert"/>
                  <strong>Github</strong>
                  </Link>
                </button>
                <% } %> 
                <RandomNumberGenerator />
            </div>
        </div>
    <% } %> 
    )
}

<% if(props.next.nextDependencies.tanstackQuery) { %>
function GithubStar() {
  const { isPending, error, data } = useQuery({
    queryKey: ['repoData'],
    queryFn: () =>
      fetch('https://api.github.com/repos/ofcljaved/chess').then((res) =>
        res.json(),
      ),
  })
<% if(props.next.nextDependencies.tailwind || props.next.nextDependencies.shadcnTailwind) { %>
    <% if(props.next.nextDependencies.shadcnTailwind) { %>
        if (isPending) return <Button variant={"outline"} className="justify-self-end">Loading...</Button>
    <% } else { %> 
        if (isPending) return <Button className="bg-transparent text-primary border border-[#27272a] gap-1 justify-self-end">
oading...</Button>
    <% } %> 
<% } else { %> 
  if (isPending) return <button className="githubstar">Loading...</button>
<% } %> 
  if (error) return 'An error has occurred: ' + error.message
  return (
<% if(props.next.nextDependencies.tailwind || props.next.nextDependencies.shadcnTailwind) { %>
    <% if(props.next.nextDependencies.shadcnTailwind) { %>
            <Button asChild variant={"outline"} className="gap-1 justify-self-end">
            <Link href="https://github.com/super-turbo-stack/create-super-stack" target="_blank">
            <Image width={16} height={16} src={'/github.svg'} alt="Github" className="h-4 dark:invert"/>
            <strong>Star</strong>
            <span className="ml-2">{data.stargazers_count}</span>
            </Link>
            </Button>
    <% } else { %> 
            <Button className="bg-transparent text-primary border border-[#27272a] gap-1 justify-self-end">
            <Link href="https://github.com/super-turbo-stack/create-super-stack" className="flex gap-1 items-center" target="_blank">
            <Image width={16} height={16} src={'/github.svg'} alt="Github" className="h-4 dark:invert"/>
            <strong>Star</strong>
            <span className="ml-2">{data.stargazers_count}</span>
            </Link>
            </Button>
    <% } %> 
<% } else { %> 
    <button className="githubstar">
    <Link href="https://github.com/super-turbo-stack/create-super-stack" target="_blank">
      <Image width={16} height={16} src={'/github.svg'} alt="Github" />
      <strong>Star</strong>
      <span>{data.stargazers_count}</span>
      </Link>
    </button>
<% } %> 
  )
}
<% } %> 

function RandomNumberGenerator() {
    <% if(props.next.nextDependencies.recoil) { %>
    const [count, setCount] = useRecoilState(countState);
    <% } else { %> 
      const [count, setCount] = useState(0)
    <% } %> 
    const generateRandomNumber = () => {
        setCount(Math.floor(Math.random() * 1000));
    };
    useEffect(generateRandomNumber, [setCount]);
    return (
    <% if(props.next.nextDependencies.tailwind || props.next.nextDependencies.shadcnTailwind) { %>
        <div className="grid place-items-center gap-2 col-span-2 self-start">
            <span>{count}</span>
    <% if(props.next.nextDependencies.shadcnTailwind) { %>
            <Button variant={"secondary"} onClick={generateRandomNumber}>
                Generate Random Number
            </Button>
    <% } else { %> 
            <Button  className="bg-secondary text-primary" onClick={generateRandomNumber}>
                Generate Random Number
            </Button>
    <% } %> 
        </div>
    <% } else { %> 
        <div className="randomnumber">
            <span>{count}</span>
            <button onClick={generateRandomNumber}>
                Generate Random Number
            </button>
        </div>
    <% } %> 
    )
}

<% if(props.next.nextDependencies.tailwind && !props.next.nextDependencies.shadcnTailwind) { %>
function Button ({
  children,
  className = "",
  ...props
}: React.ButtonHTMLAttributes<HTMLButtonElement>) {
    return (
    <button
      className={`bg-primary h-10 px-4 py-2 inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 ${className}`}
      {...props}>
      {children}
    </button>
    )
}
<% } %> 
export default page
